name: Build and Release Tauri App

on:
  pull_request:
    paths:
      - 'tauri-gui/**'
      - '.github/workflows/packaging.yml'
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag to build and release'
        required: true

jobs:
  build:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        platform: [windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: tauri-gui/package-lock.json

      - name: Install frontend dependencies
        working-directory: tauri-gui
        run: npm ci

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build Tauri application
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: tauri-gui

  create-release:
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      release-id: ${{ steps.create-release.outputs.id }}
      release-tag: ${{ steps.release-tag.outputs.value }}
    steps:
      - name: Determine release tag
        id: release-tag
        run: echo "value=${{ github.event_name == 'workflow_dispatch' && inputs.tag_name || github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release-tag.outputs.value }}
          release_name: DDBS Reviewer Recommendations v${{ steps.release-tag.outputs.value }}
          target_commitish: ${{ github.sha }}
          draft: false
          prerelease: false

  release:
    needs: create-release
    if: needs.create-release.result == 'success'
    strategy:
      matrix:
        platform: [windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: tauri-gui/package-lock.json

      - name: Install frontend dependencies
        working-directory: tauri-gui
        run: npm ci

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build and upload release artifacts
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          projectPath: tauri-gui
          releaseId: ${{ needs.create-release.outputs.release-id }}
